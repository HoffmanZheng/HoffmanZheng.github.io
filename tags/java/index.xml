<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 人间一场大梦</title>
    <link>http://chenghao.monster/tags/java/</link>
    <description>Recent content in Java on 人间一场大梦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jan 2020 16:11:47 +0100</lastBuildDate>
    
	<atom:link href="http://chenghao.monster/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java：Collections、Arrays工具类及常见方法</title>
      <link>http://chenghao.monster/2020/javacollectionsarrays%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%8F%8A%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 02 Jan 2020 16:11:47 +0100</pubDate>
      
      <guid>http://chenghao.monster/2020/javacollectionsarrays%E5%B7%A5%E5%85%B7%E7%B1%BB%E5%8F%8A%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/</guid>
      <description>本篇介绍 Java 中的集合类框架的基础知识，其源码实现、相关面试题会在之后更新，敬请期待。
一、Collection 继承体系 1. 集合 Collection 介绍  为什么需要集合？  集合使 Java 可以处理多个同类型的对象（List / Set），亦或是多个键值对类型的数据（Map）。   集合的常用功能：  添加：add(Object obj)、addAll(Collection c)； 删除：clear()、remove(Object)、removeAll(Collection)； 判断包含：isEmpty()、contains(Object)、containsAll(Collection)；  contains 方法进行判定时，==会调用 equals 方法==，所以在用集合存储引用对象（非原生数据类型）时需要重写 equals 和 HashCode 方法。   遍历获取：Iteratoriterator()； 长度：size()； 交集：retainAll(Collection c)； 若有元素被移除，==此操作会改变原有实例集合==。   迭代器（Iterator）：  以内部类的方式遍历集合中的元素，有以下方法：  hasNext()； next()； remove()；   构造思路：  写一个 iterator() 方法返回一个自己的迭代器， 创建一个自己的迭代器继承 Iterator 接口，重写接口的三个方法。 使用时：用 iterator() 创建迭代器，再用迭代器去调用其中的三个方法。      2. List：对付顺序的好帮手  List 是插入有序的，元素可重复的。 List 有个自己的迭代器 ListIterator ，比普通的迭代器多出几个功能：向前遍历、添加元素、设置元素等。 List 常用的实现类有  ArrayList ：底层数据结构是数组，线程不安全。 LinkedList ：底层数据结构是链表，线程不安全。 Vector ：底层数据结构是数组，线程安全。    3.</description>
    </item>
    
  </channel>
</rss>